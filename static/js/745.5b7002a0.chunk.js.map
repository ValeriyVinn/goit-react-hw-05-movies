{"version":3,"file":"static/js/745.5b7002a0.chunk.js","mappings":"oOAWE,EATa,WACX,OACE,+BACE,mBAAQA,KAAK,eAAeC,UAAU,eAAtC,SAAqD,YAK1D,E,kBCoDH,EA1DkB,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAEjBC,EAMED,EANFC,eACAC,EAKEF,EALFE,YACAC,EAIEH,EAJFG,OACAC,EAGEJ,EAHFI,SACAC,EAEEL,EAFFK,aACAC,EACEN,EADFM,aAGF,OACE,iBAAKP,UAAU,iBAAf,WACE,0BACE,gBAAKQ,KAAKC,EAAAA,EAAAA,IAAON,GAAcO,IAAKR,OAGtC,iBAAKF,UAAU,UAAf,WACE,wBAAKE,KAEL,0BACE,iBAAMF,UAAU,WAAhB,SAA2B,eAAiB,IAAEK,MAEhD,0BACE,iBAAML,UAAU,WAAhB,SAA2B,YAAc,IAAEM,EAAa,YAE1D,0BACE,iBAAMN,UAAU,WAAhB,SAA2B,kBAAoB,IAAE,KAAOO,MAG1D,iBAAMP,UAAU,WAAhB,SAA2B,YAE1BI,EACGA,EAAOO,KAAI,SAACC,EAAOC,GAAR,OACT,cAAeb,UAAU,aAAzB,SACGY,EAAME,KAAO,KADRD,EADC,IAKX,+BAIX,E,mCCkBD,EApDqB,WAAO,IAAD,IACzB,GAAwCE,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAGFE,EAAY,qBAFDC,EAAAA,EAAAA,MAEaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,UAgB7C,OAdAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8FAEIP,GAAa,GAFjB,KAGIF,EAHJ,UAG0BU,EAAAA,EAAAA,IAAgBC,OAAOR,IAHjD,kFAKIS,EAAAA,GAAAA,MAAY,qBALhB,yBAOIV,GAAa,GAPjB,6EADc,uBAAC,WAAD,wBAWdW,EACD,GAAE,CAACV,IAECJ,GAIH,gBAAKhB,UAAU,OAAf,UACE,iCACE,SAAC,KAAD,CAAM+B,GAAIT,EAActB,UAAU,WAAlC,UACE,SAAC,EAAD,MAEDkB,IAAa,SAACc,EAAA,EAAD,KACd,SAAC,EAAD,CAAW/B,KAAMe,KAEjB,UAAC,KAAD,CAAMe,GAAG,OAAOP,MAAO,CAAEC,KAAMH,GAAgBtB,UAAU,WAAzD,UACG,IAAI,OACA,QAGP,UAAC,KAAD,CACE+B,GAAG,UACHP,MAAO,CAAEC,KAAMH,GACftB,UAAU,cAHZ,UAKG,IAAI,UACG,QAEV,SAAC,KAAD,SAxBG,IA4BV,C","sources":["components/GoBack/GoBack.jsx","components/MovieCard/MovieCard.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import './GoBack.style.css';\n\nconst GoBack = () => {\n    return (\n      <>\n        <button type=\"buttonGoBack\" className=\"buttonGoBack\">\n          GoBack\n        </button>\n      </>\n    );\n  };\n  export default GoBack;","import './MovieCard.style.css';\nimport { getURL } from '../../servises/api';\n// import PropTypes from 'prop-types';\n\nconst MovieCard = ({ info }) => {\n  const {\n    original_title,\n    poster_path,\n    genres,\n    overview,\n    vote_average,\n    release_date,\n  } = info;\n\n  return (\n    <div className=\"card_container\">\n      <div>\n        <img src={getURL(poster_path)} alt={original_title} />\n      </div>\n\n      <div className=\"details\">\n        <h1>{original_title}</h1>\n\n        <p>\n          <span className=\"textCard\">Overview: </span> {overview}\n        </p>\n        <p>\n          <span className=\"textCard\">Points:</span> {vote_average} / 10\n        </p>\n        <p>\n          <span className=\"textCard\">Release date:</span> {'  ' + release_date}\n        </p>\n\n        <span className=\"textCard\"> Genre:</span>\n\n        {genres\n          ? genres.map((genre, index) => (\n              <p key={index} className=\"genre_item\">\n                {genre.name + ','}\n              </p>\n            ))\n          : 'Genres is not available'}\n      </div>\n    </div>\n  );\n};\n\n// MovieCard.propTypes = {\n//   info: PropTypes.shape({\n//     original_title: PropTypes.string.isRequired,\n//     poster_path: PropTypes.string.isRequired,\n//     genres: PropTypes.arrayOf(\n//       PropTypes.shape({\n//         name: PropTypes.string.isRequired,\n//       })\n//     ),\n//     overview: PropTypes.string.isRequired,\n//     vote_average: PropTypes.number.isRequired,\n//     release_date: PropTypes.string.isRequired,\n//   }).isRequired,\n// };\n\nexport default MovieCard;\n","import GoBack from 'components/GoBack/GoBack';\nimport Loader from 'components/Loader/Loader';\nimport MovieCard from 'components/MovieCard/MovieCard';\nimport { useEffect, useState } from 'react';\nimport { Link, useParams, useLocation, Outlet } from 'react-router-dom';\n\nimport { toast } from 'react-toastify';\nimport { getMovieDetails } from 'servises/api';\n\nimport './MovieDetails.styles.css';\n\nconst MovieDetails = () => {\n  const [movieDetails, setMovieDetails] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  const backLinkHref = location.state?.from ?? '/movies';\n\n  useEffect(() => {\n    async function fetchDetails() {\n      try {\n        setIsLoading(true);\n        setMovieDetails(await getMovieDetails(Number(movieId)));\n      } catch (error) {\n        toast.error('we have a problem');\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    fetchDetails();\n  }, [movieId]);\n\n  if (!movieDetails) {\n    return null;\n  }\n  return (\n    <div className=\"card\">\n      <>\n        <Link to={backLinkHref} className=\"backLink\">\n          <GoBack />\n        </Link>\n        {isLoading && <Loader />}\n        <MovieCard info={movieDetails} />\n\n        <Link to=\"cast\" state={{ from: backLinkHref }} className=\"castLink\">\n          {' '}\n          Cast{' '}\n        </Link>\n\n        <Link\n          to=\"reviews\"\n          state={{ from: backLinkHref }}\n          className=\"reviewsLink\"\n        >\n          {' '}\n          Reviews{' '}\n        </Link>\n        <Outlet />\n      </>\n    </div>\n  );\n};\nexport default MovieDetails;\n"],"names":["type","className","info","original_title","poster_path","genres","overview","vote_average","release_date","src","getURL","alt","map","genre","index","name","useState","movieDetails","setMovieDetails","isLoading","setIsLoading","movieId","useParams","backLinkHref","useLocation","state","from","useEffect","getMovieDetails","Number","toast","fetchDetails","to","Loader"],"sourceRoot":""}