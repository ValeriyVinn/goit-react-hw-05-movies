{"version":3,"file":"static/js/470.32934738.chunk.js","mappings":"+PAuCA,MAnCA,YAAkC,IAAbA,EAAY,EAAZA,SACnB,GAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAgBA,OACE,kBAAMH,SAXa,SAAAI,GACnBA,EAAMC,iBACN,IAAMC,EAAQJ,EAAYK,OAC1B,GAAc,KAAVD,EACF,OAAOE,EAAAA,GAAAA,MAAY,mCAErBR,EAASM,GACTH,EAAe,GAChB,EAG+BM,UAAU,aAAxC,WACE,mBAAQA,UAAU,eAAeC,KAAK,SAAtC,UACE,iBAAMD,UAAU,cAAhB,SAA8B,cAEhC,kBACEA,UAAU,cACVC,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,gBACZC,MAAOZ,EACPa,SA1BmB,SAAAX,GACvBD,EAAeC,EAAMY,cAAcF,MAAMG,cAC1C,MA4BF,E,0BCAD,EA/BmB,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,KACpBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,iBAAKZ,UAAU,YAAf,WACE,gBAAIA,UAAU,QAAd,UAAsB,oBAAkBU,EAAK,QAE7C,gBAAKV,UAAU,OAAf,SACGS,EAAKI,KAAI,YAAiC,IAA9BC,EAA6B,EAA7BA,GAAIC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,YACtB,OACE,UAAC,KAAD,CACEhB,UAAU,OACViB,GAAE,kBAAaH,GAEfI,MAAO,CAAEC,KAAMR,GAJjB,WAME,gBAAKX,UAAU,MAAMoB,KAAKC,EAAAA,EAAAA,IAAOL,GAAcM,IAAKP,KACpD,eAAIf,UAAU,OAAd,SAAsBe,MAJjBD,EAOV,QAIR,ECaD,EAlCe,WAAO,IAAD,EACnB,GAAkCtB,EAAAA,EAAAA,UAAS,IAA3C,eAAO+B,EAAP,KAAkBC,EAAlB,KACA,GAAkChC,EAAAA,EAAAA,WAAS,GAA3C,eAAOiC,EAAP,KAAkBC,EAAlB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAS,UAAGF,EAAaG,IAAI,eAApB,QAA+B,KAC9CC,EAAAA,EAAAA,YAAU,WACR,GAAkB,KAAdF,EAAJ,CAGA,IAAMG,EAAe,mCAAG,8FAEpBP,GAAa,GAFO,KAGpBF,EAHoB,UAGDU,EAAAA,EAAAA,IAAkBJ,GAHjB,kFAKpB/B,EAAAA,GAAAA,MAAY,qBALQ,yBAOpB2B,GAAa,GAPO,4EAAH,qDAUrBO,GAXC,CAYF,GAAE,CAACH,IAMJ,OACE,iCACE,SAAC,EAAD,CAAWvC,SANI,SAAAmB,GACjBmB,EAAyB,KAATnB,EAAc,CAAEA,KAAAA,GAAS,CAAC,EAC3C,IAKIe,IAAa,SAACU,EAAA,EAAD,IACbZ,EAAUa,OAAS,IAAK,SAAC,EAAD,CAAY3B,KAAMc,EAAWb,KAAMoB,MAGjE,C","sources":["components/SearchBar/SearchBar.jsx","components/MovieList/MovieList.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport './SearchBar.style.css';\n\nfunction SearchBar({ onSubmit }) {\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const handleNameChange = event => {\n    setSearchQuery(event.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const query = searchQuery.trim();\n    if (query === '') {\n      return toast.error('Enter something in the search !');\n    }\n    onSubmit(query);\n    setSearchQuery('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"formSearch\">\n      <button className=\"buttonSearch\" type=\"submit\">\n        <span className=\"button_text\">Search</span>\n      </button>\n      <input\n        className=\"inputSearch\"\n        type=\"text\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search movies\"\n        value={searchQuery}\n        onChange={handleNameChange}\n      />\n    </form>\n  );\n}\n\nexport default SearchBar;\n","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { getURL } from '../../servises/api';\nimport './MovieList.style.css';\n\n\nconst MoviesList = ({ list, name }) => {\n  const location = useLocation();\n\n  return (\n    <div className=\"container\">\n      <h2 className=\"title\">List by request \"{name}\"</h2>\n\n      <div className=\"list\">\n        {list.map(({ id, title, poster_path }) => {\n          return (\n            <Link\n              className=\"link\"\n              to={`/movies/${id}`}\n              key={id}\n              state={{ from: location }}\n            >\n              <img className=\"img\" src={getURL(poster_path)} alt={title} />\n              <h2 className=\"text\">{title}</h2>\n            </Link>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nMoviesList.propTypes = {\n  list: PropTypes.array.isRequired,\n  name: PropTypes.string.isRequired,\n};\n\nexport default MoviesList;","import Loader from 'components/Loader/Loader';\nimport SearchBar from 'components/SearchBar/SearchBar';\nimport MoviesList from 'components/MovieList/MovieList';\n\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getMoviesBySearch } from 'servises/api';\nimport { toast } from 'react-toastify';\n\nconst Movies = () => {\n  const [movieList, setMovieList] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieName = searchParams.get('name') ?? '/';\n  useEffect(() => {\n    if (movieName === '') {\n      return;\n    }\n    const fetchMoviesList = async () => {\n      try {\n        setIsLoading(true);\n        setMovieList(await getMoviesBySearch(movieName));\n      } catch (error) {\n        toast.error('we have a problem');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchMoviesList();\n  }, [movieName]);\n\n  const inputValue = name => {\n    setSearchParams(name !== '' ? { name } : {});\n  };\n\n  return (\n    <>\n      <SearchBar onSubmit={inputValue} />\n      {isLoading && <Loader />}\n      {movieList.length > 0 && <MoviesList list={movieList} name={movieName} />}\n    </>\n  );\n};\nexport default Movies;"],"names":["onSubmit","useState","searchQuery","setSearchQuery","event","preventDefault","query","trim","toast","className","type","autoComplete","autoFocus","placeholder","value","onChange","currentTarget","toLowerCase","list","name","location","useLocation","map","id","title","poster_path","to","state","from","src","getURL","alt","movieList","setMovieList","isLoading","setIsLoading","useSearchParams","searchParams","setSearchParams","movieName","get","useEffect","fetchMoviesList","getMoviesBySearch","Loader","length"],"sourceRoot":""}