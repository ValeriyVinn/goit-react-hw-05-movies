{"ast":null,"code":"var _jsxFileName = \"E:\\\\\\u041D\\u0410\\u0412\\u0427\\u0410\\u041B\\u041E\\u0427\\u041A\\u0410\\\\HW\\\\REACT\\\\goit-react-hw-05-movies\\\\src\\\\pages\\\\MovieDetails\\\\MovieDetails.jsx\",\n    _s = $RefreshSig$();\n\nimport GoBack from 'components/GoBack/GoBack';\nimport Loader from 'components/Loader/Loader';\nimport MovieCard from 'components/MovieCard/MovieCard';\nimport { useEffect, useState } from 'react';\nimport { Link, useParams, useLocation, Outlet } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { getMovieDetails } from 'servises/api';\nimport './MovieDetails.styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MovieDetails = () => {\n  _s();\n\n  var _location$state$from, _location$state;\n\n  const [movieDetails, setMovieDetails] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const {\n    movieId\n  } = useParams();\n  const location = useLocation();\n  const backLinkHref = (_location$state$from = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.from) !== null && _location$state$from !== void 0 ? _location$state$from : '/movies';\n  useEffect(() => {\n    async function fetchDetails() {\n      try {\n        setIsLoading(true);\n        setMovieDetails(await getMovieDetails(Number(movieId)));\n      } catch (error) {\n        toast.error('we have a problem');\n      } finally {\n        setIsLoading(false);\n      }\n    }\n\n    fetchDetails();\n  }, [movieId]);\n\n  if (!movieDetails) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: backLinkHref,\n        className: \"backLink\",\n        children: /*#__PURE__*/_jsxDEV(GoBack, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(MovieCard, {\n        info: movieDetails\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"cast\",\n        state: {\n          from: backLinkHref\n        },\n        className: \"castLink\",\n        children: [' ', \"Cast\", ' ']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"reviews\",\n        state: {\n          from: backLinkHref\n        },\n        className: \"reviewsLink\",\n        children: [' ', \"Reviews\", ' ']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MovieDetails, \"ehfr7dhbW6C8BbNj1TLiIp5Aqpo=\", false, function () {\n  return [useParams, useLocation];\n});\n\n_c = MovieDetails;\nexport default MovieDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieDetails\");","map":{"version":3,"sources":["E:/НАВЧАЛОЧКА/HW/REACT/goit-react-hw-05-movies/src/pages/MovieDetails/MovieDetails.jsx"],"names":["GoBack","Loader","MovieCard","useEffect","useState","Link","useParams","useLocation","Outlet","toast","getMovieDetails","MovieDetails","movieDetails","setMovieDetails","isLoading","setIsLoading","movieId","location","backLinkHref","state","from","fetchDetails","Number","error"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,gCAAtB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,IAAT,EAAeC,SAAf,EAA0BC,WAA1B,EAAuCC,MAAvC,QAAqD,kBAArD;AAEA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,eAAT,QAAgC,cAAhC;AAEA,OAAO,2BAAP;;;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AAAA;;AACzB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM;AAAEY,IAAAA;AAAF,MAAcV,SAAS,EAA7B;AACA,QAAMW,QAAQ,GAAGV,WAAW,EAA5B;AAEA,QAAMW,YAAY,8CAAGD,QAAQ,CAACE,KAAZ,oDAAG,gBAAgBC,IAAnB,uEAA2B,SAA7C;AAEAjB,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAekB,YAAf,GAA8B;AAC5B,UAAI;AACFN,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACAF,QAAAA,eAAe,CAAC,MAAMH,eAAe,CAACY,MAAM,CAACN,OAAD,CAAP,CAAtB,CAAf;AACD,OAHD,CAGE,OAAOO,KAAP,EAAc;AACdd,QAAAA,KAAK,CAACc,KAAN,CAAY,mBAAZ;AACD,OALD,SAKU;AACRR,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;AACF;;AACDM,IAAAA,YAAY;AACb,GAZQ,EAYN,CAACL,OAAD,CAZM,CAAT;;AAcA,MAAI,CAACJ,YAAL,EAAmB;AACjB,WAAO,IAAP;AACD;;AACD,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,2BACE;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAEM,YAAV;AAAwB,QAAA,SAAS,EAAC,UAAlC;AAAA,+BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,EAIGJ,SAAS,iBAAI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cAJhB,eAKE,QAAC,SAAD;AAAW,QAAA,IAAI,EAAEF;AAAjB;AAAA;AAAA;AAAA;AAAA,cALF,eAOE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,MAAT;AAAgB,QAAA,KAAK,EAAE;AAAEQ,UAAAA,IAAI,EAAEF;AAAR,SAAvB;AAA+C,QAAA,SAAS,EAAC,UAAzD;AAAA,mBACG,GADH,EACO,MADP,EAEO,GAFP;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,eAYE,QAAC,IAAD;AACE,QAAA,EAAE,EAAC,SADL;AAEE,QAAA,KAAK,EAAE;AAAEE,UAAAA,IAAI,EAAEF;AAAR,SAFT;AAGE,QAAA,SAAS,EAAC,aAHZ;AAAA,mBAKG,GALH,EAKO,SALP,EAMU,GANV;AAAA;AAAA;AAAA;AAAA;AAAA,cAZF,eAoBE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cApBF;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD,CAnDD;;GAAMP,Y;UAGgBL,S,EACHC,W;;;KAJbI,Y;AAoDN,eAAeA,YAAf","sourcesContent":["import GoBack from 'components/GoBack/GoBack';\r\nimport Loader from 'components/Loader/Loader';\r\nimport MovieCard from 'components/MovieCard/MovieCard';\r\nimport { useEffect, useState } from 'react';\r\nimport { Link, useParams, useLocation, Outlet } from 'react-router-dom';\r\n\r\nimport { toast } from 'react-toastify';\r\nimport { getMovieDetails } from 'servises/api';\r\n\r\nimport './MovieDetails.styles.css';\r\n\r\nconst MovieDetails = () => {\r\n  const [movieDetails, setMovieDetails] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const { movieId } = useParams();\r\n  const location = useLocation();\r\n\r\n  const backLinkHref = location.state?.from ?? '/movies';\r\n\r\n  useEffect(() => {\r\n    async function fetchDetails() {\r\n      try {\r\n        setIsLoading(true);\r\n        setMovieDetails(await getMovieDetails(Number(movieId)));\r\n      } catch (error) {\r\n        toast.error('we have a problem');\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    }\r\n    fetchDetails();\r\n  }, [movieId]);\r\n\r\n  if (!movieDetails) {\r\n    return null;\r\n  }\r\n  return (\r\n    <div className=\"card\">\r\n      <>\r\n        <Link to={backLinkHref} className=\"backLink\">\r\n          <GoBack />\r\n        </Link>\r\n        {isLoading && <Loader />}\r\n        <MovieCard info={movieDetails} />\r\n\r\n        <Link to=\"cast\" state={{ from: backLinkHref }} className=\"castLink\">\r\n          {' '}\r\n          Cast{' '}\r\n        </Link>\r\n\r\n        <Link\r\n          to=\"reviews\"\r\n          state={{ from: backLinkHref }}\r\n          className=\"reviewsLink\"\r\n        >\r\n          {' '}\r\n          Reviews{' '}\r\n        </Link>\r\n        <Outlet />\r\n      </>\r\n    </div>\r\n  );\r\n};\r\nexport default MovieDetails;\r\n"]},"metadata":{},"sourceType":"module"}