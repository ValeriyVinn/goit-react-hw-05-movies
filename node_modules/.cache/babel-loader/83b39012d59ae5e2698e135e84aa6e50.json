{"ast":null,"code":"var _jsxFileName = \"E:\\\\\\u041D\\u0410\\u0412\\u0427\\u0410\\u041B\\u041E\\u0427\\u041A\\u0410\\\\HW\\\\REACT\\\\goit-react-hw-05-movies\\\\src\\\\components\\\\MovieCard\\\\MovieCard.jsx\";\nimport './MovieCard.style.css';\nimport { getURL } from '../../servises/api';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MovieCard = _ref => {\n  let {\n    info\n  } = _ref;\n  const {\n    original_title,\n    poster_path,\n    genres,\n    overview,\n    vote_average,\n    release_date\n  } = info;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card_container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: getURL(poster_path),\n        alt: original_title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"details\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: original_title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"textCard\",\n          children: \"Overview: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), \" \", overview]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"textCard\",\n          children: \"Points:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), \" \", vote_average, \" / 10\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"textCard\",\n          children: \"Release date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), \" \", '  ' + release_date]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"textCard\",\n        children: \" Genre:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), genres ? genres.map((genre, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"genre_item\",\n        children: genre.name + ','\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 15\n      }, this)) : 'Genres is not available']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n\n_c = MovieCard;\nMovieCard.propTypes = {\n  // info: PropTypes.shape({\n  //   original_title: PropTypes.string.isRequired,\n  //   poster_path: PropTypes.string.isRequired,\n  //   genres: PropTypes.arrayOf(\n  //     PropTypes.shape({\n  //       name: PropTypes.string.isRequired,\n  //     })\n  //   ),\n  //   overview: PropTypes.string.isRequired,\n  //   vote_average: PropTypes.number.isRequired,\n  //   release_date: PropTypes.string.isRequired,\n  // }).isRequired,\n  original_title: PropTypes.string.isRequired,\n  poster_path: PropTypes.string.isRequired,\n  genres: [{\n    name: PropTypes.string.isRequired\n  }],\n  overview: PropTypes.string.isRequired,\n  vote_average: 8.5,\n  release_date: '2022-01-01'\n};\nexport default MovieCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieCard\");","map":{"version":3,"sources":["E:/НАВЧАЛОЧКА/HW/REACT/goit-react-hw-05-movies/src/components/MovieCard/MovieCard.jsx"],"names":["getURL","PropTypes","MovieCard","info","original_title","poster_path","genres","overview","vote_average","release_date","map","genre","index","name","propTypes","string","isRequired"],"mappings":";AAAA,OAAO,uBAAP;AACA,SAASA,MAAT,QAAuB,oBAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,MAAMC,SAAS,GAAG,QAAc;AAAA,MAAb;AAAEC,IAAAA;AAAF,GAAa;AAC9B,QAAM;AACJC,IAAAA,cADI;AAEJC,IAAAA,WAFI;AAGJC,IAAAA,MAHI;AAIJC,IAAAA,QAJI;AAKJC,IAAAA,YALI;AAMJC,IAAAA;AANI,MAOFN,IAPJ;AASA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACE;AAAA,6BACE;AAAK,QAAA,GAAG,EAAEH,MAAM,CAACK,WAAD,CAAhB;AAA+B,QAAA,GAAG,EAAED;AAApC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACE;AAAA,kBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,cADF,eAGE;AAAA,gCACE;AAAM,UAAA,SAAS,EAAC,UAAhB;AAAA,oBAA2B;AAA3B;AAAA;AAAA;AAAA;AAAA,gBADF,EAC8C,GAD9C,EACgDG,QADhD;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAME;AAAA,gCACE;AAAM,UAAA,SAAS,EAAC,UAAhB;AAAA,oBAA2B;AAA3B;AAAA;AAAA;AAAA;AAAA,gBADF,EAC2C,GAD3C,EAC6CC,YAD7C,EAC0D,OAD1D;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,eASE;AAAA,gCACE;AAAM,UAAA,SAAS,EAAC,UAAhB;AAAA,oBAA2B;AAA3B;AAAA;AAAA;AAAA;AAAA,gBADF,EACiD,GADjD,EACmD,OAAOC,YAD1D;AAAA;AAAA;AAAA;AAAA;AAAA,cATF,eAaE;AAAM,QAAA,SAAS,EAAC,UAAhB;AAAA,kBAA2B;AAA3B;AAAA;AAAA;AAAA;AAAA,cAbF,EAeGH,MAAM,GACHA,MAAM,CAACI,GAAP,CAAW,CAACC,KAAD,EAAQC,KAAR,kBACT;AAAe,QAAA,SAAS,EAAC,YAAzB;AAAA,kBACGD,KAAK,CAACE,IAAN,GAAa;AADhB,SAAQD,KAAR;AAAA;AAAA;AAAA;AAAA,cADF,CADG,GAMH,yBArBN;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD,CAzCD;;KAAMV,S;AA2CNA,SAAS,CAACY,SAAV,GAAsB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAV,EAAAA,cAAc,EAAEH,SAAS,CAACc,MAAV,CAAiBC,UAdb;AAepBX,EAAAA,WAAW,EAAEJ,SAAS,CAACc,MAAV,CAAiBC,UAfV;AAgBpBV,EAAAA,MAAM,EAAE,CACN;AAAEO,IAAAA,IAAI,EAAEZ,SAAS,CAACc,MAAV,CAAiBC;AAAzB,GADM,CAhBY;AAmBpBT,EAAAA,QAAQ,EAAEN,SAAS,CAACc,MAAV,CAAiBC,UAnBP;AAoBpBR,EAAAA,YAAY,EAAE,GApBM;AAqBpBC,EAAAA,YAAY,EAAE;AArBM,CAAtB;AA2BA,eAAeP,SAAf","sourcesContent":["import './MovieCard.style.css';\r\nimport { getURL } from '../../servises/api';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst MovieCard = ({ info }) => {\r\n  const {\r\n    original_title,\r\n    poster_path,\r\n    genres,\r\n    overview,\r\n    vote_average,\r\n    release_date,\r\n  } = info;\r\n\r\n  return (\r\n    <div className=\"card_container\">\r\n      <div>\r\n        <img src={getURL(poster_path)} alt={original_title} />\r\n      </div>\r\n\r\n      <div className=\"details\">\r\n        <h1>{original_title}</h1>\r\n\r\n        <p>\r\n          <span className=\"textCard\">Overview: </span> {overview}\r\n        </p>\r\n        <p>\r\n          <span className=\"textCard\">Points:</span> {vote_average} / 10\r\n        </p>\r\n        <p>\r\n          <span className=\"textCard\">Release date:</span> {'  ' + release_date}\r\n        </p>\r\n\r\n        <span className=\"textCard\"> Genre:</span>\r\n\r\n        {genres\r\n          ? genres.map((genre, index) => (\r\n              <p key={index} className=\"genre_item\">\r\n                {genre.name + ','}\r\n              </p>\r\n            ))\r\n          : 'Genres is not available'}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nMovieCard.propTypes = {\r\n  // info: PropTypes.shape({\r\n  //   original_title: PropTypes.string.isRequired,\r\n  //   poster_path: PropTypes.string.isRequired,\r\n  //   genres: PropTypes.arrayOf(\r\n  //     PropTypes.shape({\r\n  //       name: PropTypes.string.isRequired,\r\n  //     })\r\n  //   ),\r\n  //   overview: PropTypes.string.isRequired,\r\n  //   vote_average: PropTypes.number.isRequired,\r\n  //   release_date: PropTypes.string.isRequired,\r\n  // }).isRequired,\r\n\r\n  original_title: PropTypes.string.isRequired,\r\n  poster_path: PropTypes.string.isRequired,\r\n  genres: [\r\n    { name: PropTypes.string.isRequired },\r\n  ],\r\n  overview: PropTypes.string.isRequired,\r\n  vote_average: 8.5,\r\n  release_date: '2022-01-01',\r\n\r\n\r\n\r\n};\r\n\r\nexport default MovieCard;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}