{"ast":null,"code":"var _jsxFileName = \"E:\\\\\\u041D\\u0410\\u0412\\u0427\\u0410\\u041B\\u041E\\u0427\\u041A\\u0410\\\\HW\\\\REACT\\\\goit-react-hw-05-movies\\\\src\\\\components\\\\Reviews\\\\Reviews.jsx\",\n    _s = $RefreshSig$();\n\nimport { getMovieReviews } from 'servises/api';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport Loader from 'components/Loader/Loader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Reviews = () => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [reviews, setReviews] = useState([]);\n  const {\n    movieId\n  } = useParams();\n  useEffect(() => {\n    async function fetchCredits() {\n      try {\n        setIsLoading(true);\n        setReviews(await getMovieReviews(Number(movieId)));\n      } catch (error) {\n        toast.error('we have a problem');\n      } finally {\n        setIsLoading(false);\n      }\n    }\n\n    fetchCredits();\n  }, [movieId]);\n  return (\n    /*#__PURE__*/\n    // <>\n    //   {isLoading && <Loader />}\n    //   {!reviews ? (\n    //     <div>\n    //       {reviews.map(({ author, content, id }) => (\n    //         <div key={id} style={{ paddingRight: '30px' }}>\n    //           <h3>{author}</h3>\n    //           <p>{content}</p>\n    //         </div>\n    //       ))}\n    //     </div>\n    //   ) : (\n    //     <p>We don`t have any reviews yet</p>\n    //   )}\n    // </>\n    _jsxDEV(\"div\", {\n      className: \"reviewesContainer\",\n      children: reviews.length === 0 ? /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"No Reviews.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 30\n      }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"reviewsList\",\n        children: reviews.map(_ref => {\n          let {\n            id,\n            author,\n            content\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"reviewesutor\",\n                children: \"Author:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 25\n              }, this), \" \", author]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 21\n            }, this)]\n          }, id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }, this)\n  );\n};\n\n_s(Reviews, \"g7T2gvBvYj3Hb1TBuacM60XLlzw=\", false, function () {\n  return [useParams];\n});\n\n_c = Reviews;\nexport default Reviews;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reviews\");","map":{"version":3,"sources":["E:/НАВЧАЛОЧКА/HW/REACT/goit-react-hw-05-movies/src/components/Reviews/Reviews.jsx"],"names":["getMovieReviews","useState","useEffect","useParams","toast","Loader","Reviews","isLoading","setIsLoading","reviews","setReviews","movieId","fetchCredits","Number","error","length","map","id","author","content"],"mappings":";;;AAAA,SAASA,eAAT,QAAgC,cAAhC;AAEA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;;;AAGA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM;AAAEU,IAAAA;AAAF,MAAcR,SAAS,EAA7B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeU,YAAf,GAA8B;AAC5B,UAAI;AACFJ,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,QAAAA,UAAU,CAAC,MAAMV,eAAe,CAACa,MAAM,CAACF,OAAD,CAAP,CAAtB,CAAV;AACD,OAHD,CAGE,OAAOG,KAAP,EAAc;AACdV,QAAAA,KAAK,CAACU,KAAN,CAAY,mBAAZ;AACD,OALD,SAKU;AACRN,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;AACF;;AACDI,IAAAA,YAAY;AACb,GAZQ,EAYN,CAACD,OAAD,CAZM,CAAT;AAcA;AAAA;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,gBACCF,OAAO,CAACM,MAAR,KAAmB,CAAnB,gBAAwB;AAAA,kBAAI;AAAJ;AAAA;AAAA;AAAA;AAAA,cAAxB,gBACG;AAAI,QAAA,SAAS,EAAC,aAAd;AAAA,kBACKN,OAAO,CAACO,GAAR,CAAY;AAAA,cAAC;AAAEC,YAAAA,EAAF;AAAMC,YAAAA,MAAN;AAAcC,YAAAA;AAAd,WAAD;AAAA,8BACT;AAAA,oCACI;AAAA,sCACI;AAAM,gBAAA,SAAS,EAAC,cAAhB;AAAA,0BAA+B;AAA/B;AAAA;AAAA;AAAA;AAAA,sBADJ,EACiD,GADjD,EACmDD,MADnD;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAII;AAAA,wBAAIC;AAAJ;AAAA;AAAA;AAAA;AAAA,oBAJJ;AAAA,aAASF,EAAT;AAAA;AAAA;AAAA;AAAA,kBADS;AAAA,SAAZ;AADL;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA;AAjBF;AAmCD,CAtDD;;GAAMX,O;UAGgBH,S;;;KAHhBG,O;AAuDN,eAAeA,OAAf","sourcesContent":["import { getMovieReviews } from 'servises/api';\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport Loader from 'components/Loader/Loader';\r\n\r\n\r\nconst Reviews = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [reviews, setReviews] = useState([]);\r\n  const { movieId } = useParams();\r\n\r\n  useEffect(() => {\r\n    async function fetchCredits() {\r\n      try {\r\n        setIsLoading(true);\r\n        setReviews(await getMovieReviews(Number(movieId)));\r\n      } catch (error) {\r\n        toast.error('we have a problem');\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    }\r\n    fetchCredits();\r\n  }, [movieId]);\r\n\r\n  return (\r\n    // <>\r\n    //   {isLoading && <Loader />}\r\n    //   {!reviews ? (\r\n    //     <div>\r\n    //       {reviews.map(({ author, content, id }) => (\r\n    //         <div key={id} style={{ paddingRight: '30px' }}>\r\n    //           <h3>{author}</h3>\r\n    //           <p>{content}</p>\r\n    //         </div>\r\n    //       ))}\r\n    //     </div>\r\n    //   ) : (\r\n    //     <p>We don`t have any reviews yet</p>\r\n    //   )}\r\n    // </>\r\n\r\n    <div className=\"reviewesContainer\">\r\n    {reviews.length === 0 ? (<h3>No Reviews.</h3>) : (\r\n        <ul className=\"reviewsList\">\r\n            {reviews.map(({ id, author, content }) => (\r\n                <li key={id}>\r\n                    <p>\r\n                        <span className=\"reviewesutor\">Author:</span> {author}\r\n                    </p>\r\n                    <p>{content}</p>\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    )}\r\n</div>\r\n\r\n\r\n\r\n  );\r\n};\r\nexport default Reviews;"]},"metadata":{},"sourceType":"module"}