{"ast":null,"code":"var _jsxFileName = \"E:\\\\\\u041D\\u0410\\u0412\\u0427\\u0410\\u041B\\u041E\\u0427\\u041A\\u0410\\\\HW\\\\REACT\\\\goit-react-hw-05-movies\\\\src\\\\pages\\\\Movies\\\\Movies.jsx\",\n    _s = $RefreshSig$();\n\nimport Loader from 'components/Loader/Loader';\nimport SearchBar from 'components/SearchBar/SearchBar';\nimport MoviesList from 'components/MovieList/MovieList';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getMoviesBySearch } from 'servises/api';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Movies = () => {\n  _s();\n\n  var _searchParams$get;\n\n  const [movieList, setMovieList] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieName = (_searchParams$get = searchParams.get('name')) !== null && _searchParams$get !== void 0 ? _searchParams$get : '/';\n  useEffect(() => {\n    if (movieName === '') {\n      return;\n    }\n\n    const fetchMoviesList = async () => {\n      try {\n        setIsLoading(true);\n        setMovieList(await getMoviesBySearch(movieName));\n      } catch (error) {\n        toast.error('we have a problem');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchMoviesList();\n  }, [movieName]);\n\n  const inputValue = name => {\n    setSearchParams(name !== '' ? {\n      name\n    } : {});\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      onSubmit: inputValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }, this), movieList.length > 0 && /*#__PURE__*/_jsxDEV(MoviesList, {\n      list: movieList,\n      name: movieName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 32\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Movies, \"fOIiT9LmiH2Poq+d5VgUHBOytSM=\", false, function () {\n  return [useSearchParams];\n});\n\n_c = Movies;\nexport default Movies;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"sources":["E:/НАВЧАЛОЧКА/HW/REACT/goit-react-hw-05-movies/src/pages/Movies/Movies.jsx"],"names":["Loader","SearchBar","MoviesList","useEffect","useState","useSearchParams","getMoviesBySearch","toast","Movies","movieList","setMovieList","isLoading","setIsLoading","searchParams","setSearchParams","movieName","get","fetchMoviesList","error","inputValue","name","length"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,gCAAtB;AACA,OAAOC,UAAP,MAAuB,gCAAvB;AAEA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,eAAT,QAAgC,kBAAhC;AACA,SAASC,iBAAT,QAAkC,cAAlC;AACA,SAASC,KAAT,QAAsB,gBAAtB;;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AAAA;;AACnB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACS,YAAD,EAAeC,eAAf,IAAkCT,eAAe,EAAvD;AACA,QAAMU,SAAS,wBAAGF,YAAY,CAACG,GAAb,CAAiB,MAAjB,CAAH,iEAA+B,GAA9C;AACAb,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIY,SAAS,KAAK,EAAlB,EAAsB;AACpB;AACD;;AACD,UAAME,eAAe,GAAG,YAAY;AAClC,UAAI;AACFL,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACAF,QAAAA,YAAY,CAAC,MAAMJ,iBAAiB,CAACS,SAAD,CAAxB,CAAZ;AACD,OAHD,CAGE,OAAOG,KAAP,EAAc;AACdX,QAAAA,KAAK,CAACW,KAAN,CAAY,mBAAZ;AACD,OALD,SAKU;AACRN,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;AACF,KATD;;AAUAK,IAAAA,eAAe;AAChB,GAfQ,EAeN,CAACF,SAAD,CAfM,CAAT;;AAiBA,QAAMI,UAAU,GAAGC,IAAI,IAAI;AACzBN,IAAAA,eAAe,CAACM,IAAI,KAAK,EAAT,GAAc;AAAEA,MAAAA;AAAF,KAAd,GAAyB,EAA1B,CAAf;AACD,GAFD;;AAIA,sBACE;AAAA,4BACE,QAAC,SAAD;AAAW,MAAA,QAAQ,EAAED;AAArB;AAAA;AAAA;AAAA;AAAA,YADF,EAEGR,SAAS,iBAAI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAFhB,EAGGF,SAAS,CAACY,MAAV,GAAmB,CAAnB,iBAAwB,QAAC,UAAD;AAAY,MAAA,IAAI,EAAEZ,SAAlB;AAA6B,MAAA,IAAI,EAAEM;AAAnC;AAAA;AAAA;AAAA;AAAA,YAH3B;AAAA,kBADF;AAOD,CAjCD;;GAAMP,M;UAGoCH,e;;;KAHpCG,M;AAkCN,eAAeA,MAAf","sourcesContent":["import Loader from 'components/Loader/Loader';\r\nimport SearchBar from 'components/SearchBar/SearchBar';\r\nimport MoviesList from 'components/MovieList/MovieList';\r\n\r\nimport { useEffect, useState } from 'react';\r\nimport { useSearchParams } from 'react-router-dom';\r\nimport { getMoviesBySearch } from 'servises/api';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst Movies = () => {\r\n  const [movieList, setMovieList] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n  const movieName = searchParams.get('name') ?? '/';\r\n  useEffect(() => {\r\n    if (movieName === '') {\r\n      return;\r\n    }\r\n    const fetchMoviesList = async () => {\r\n      try {\r\n        setIsLoading(true);\r\n        setMovieList(await getMoviesBySearch(movieName));\r\n      } catch (error) {\r\n        toast.error('we have a problem');\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n    fetchMoviesList();\r\n  }, [movieName]);\r\n\r\n  const inputValue = name => {\r\n    setSearchParams(name !== '' ? { name } : {});\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <SearchBar onSubmit={inputValue} />\r\n      {isLoading && <Loader />}\r\n      {movieList.length > 0 && <MoviesList list={movieList} name={movieName} />}\r\n    </>\r\n  );\r\n};\r\nexport default Movies;"]},"metadata":{},"sourceType":"module"}