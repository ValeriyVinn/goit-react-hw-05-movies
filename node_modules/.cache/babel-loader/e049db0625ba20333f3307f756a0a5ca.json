{"ast":null,"code":"var _jsxFileName = \"E:\\\\\\u041D\\u0410\\u0412\\u0427\\u0410\\u041B\\u041E\\u0427\\u041A\\u0410\\\\HW\\\\REACT\\\\goit-react-hw-05-movies\\\\src\\\\components\\\\Reviews\\\\Reviews.jsx\",\n    _s = $RefreshSig$();\n\nimport { getMovieReviews } from 'servises/api';\nimport PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport Loader from 'components/Loader/Loader';\nimport './Review.style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Reviews = () => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [reviews, setReviews] = useState([]);\n  const {\n    movieId\n  } = useParams();\n  useEffect(() => {\n    async function fetchCredits() {\n      try {\n        setIsLoading(true);\n        setReviews(await getMovieReviews(Number(movieId)));\n      } catch (error) {\n        toast.error('we have a problem');\n      } finally {\n        setIsLoading(false);\n      }\n    }\n\n    fetchCredits();\n  }, [movieId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reviewesContainer\",\n    children: [isLoading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 21\n    }, this), reviews.length === 0 ? /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"noReviewes\",\n      children: \"We don`t have any reviews yet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 30\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"reviewsList\",\n      children: reviews.map(_ref => {\n        let {\n          id,\n          author,\n          content\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"reviewesAutor\",\n              children: \"Author:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 25\n            }, this), \" \", author]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 21\n          }, this)]\n        }, id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Reviews, \"g7T2gvBvYj3Hb1TBuacM60XLlzw=\", false, function () {\n  return [useParams];\n});\n\n_c = Reviews;\nexport default Reviews;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reviews\");","map":{"version":3,"sources":["E:/НАВЧАЛОЧКА/HW/REACT/goit-react-hw-05-movies/src/components/Reviews/Reviews.jsx"],"names":["getMovieReviews","PropTypes","useState","useEffect","useParams","toast","Loader","Reviews","isLoading","setIsLoading","reviews","setReviews","movieId","fetchCredits","Number","error","length","map","id","author","content"],"mappings":";;;AAAA,SAASA,eAAT,QAAgC,cAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAO,oBAAP;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM;AAAEU,IAAAA;AAAF,MAAcR,SAAS,EAA7B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeU,YAAf,GAA8B;AAC5B,UAAI;AACFJ,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,QAAAA,UAAU,CAAC,MAAMX,eAAe,CAACc,MAAM,CAACF,OAAD,CAAP,CAAtB,CAAV;AACD,OAHD,CAGE,OAAOG,KAAP,EAAc;AACdV,QAAAA,KAAK,CAACU,KAAN,CAAY,mBAAZ;AACD,OALD,SAKU;AACRN,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;AACF;;AACDI,IAAAA,YAAY;AACb,GAZQ,EAYN,CAACD,OAAD,CAZM,CAAT;AAcA,sBACE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA,eACGJ,SAAS,iBAAI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADhB,EAECE,OAAO,CAACM,MAAR,KAAmB,CAAnB,gBAAwB;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA,gBAA2B;AAA3B;AAAA;AAAA;AAAA;AAAA,YAAxB,gBACG;AAAI,MAAA,SAAS,EAAC,aAAd;AAAA,gBACKN,OAAO,CAACO,GAAR,CAAY;AAAA,YAAC;AAAEC,UAAAA,EAAF;AAAMC,UAAAA,MAAN;AAAcC,UAAAA;AAAd,SAAD;AAAA,4BACT;AAAA,kCACI;AAAA,oCACI;AAAM,cAAA,SAAS,EAAC,eAAhB;AAAA,wBAAgC;AAAhC;AAAA;AAAA;AAAA;AAAA,oBADJ,EACkD,GADlD,EACoDD,MADpD;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII;AAAA,sBAAIC;AAAJ;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA,WAASF,EAAT;AAAA;AAAA;AAAA;AAAA,gBADS;AAAA,OAAZ;AADL;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CApCD;;GAAMX,O;UAGgBH,S;;;KAHhBG,O;AAqCN,eAAeA,OAAf","sourcesContent":["import { getMovieReviews } from 'servises/api';\r\nimport PropTypes from 'prop-types';\r\nimport { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport Loader from 'components/Loader/Loader';\r\nimport './Review.style.css';\r\n\r\nconst Reviews = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [reviews, setReviews] = useState([]);\r\n  const { movieId } = useParams();\r\n\r\n  useEffect(() => {\r\n    async function fetchCredits() {\r\n      try {\r\n        setIsLoading(true);\r\n        setReviews(await getMovieReviews(Number(movieId)));\r\n      } catch (error) {\r\n        toast.error('we have a problem');\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    }\r\n    fetchCredits();\r\n  }, [movieId]);\r\n\r\n  return (\r\n    <div className=\"reviewesContainer\">\r\n      {isLoading && <Loader />}\r\n    {reviews.length === 0 ? (<h3 className=\"noReviewes\">We don`t have any reviews yet</h3>) : (\r\n        <ul className=\"reviewsList\">\r\n            {reviews.map(({ id, author, content }) => (\r\n                <li key={id}>\r\n                    <p>\r\n                        <span className=\"reviewesAutor\">Author:</span> {author}\r\n                    </p>\r\n                    <p>{content}</p>\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    )}\r\n</div>\r\n  );\r\n};\r\nexport default Reviews;"]},"metadata":{},"sourceType":"module"}